#Automatic face recognition  : 
import threading
import winsound

import cv2
import imutils

cap = cv2.VideoCapture(0,cv2.CAP_DSHOW)
cap.set(cv2.CAP_PROP_FRAME_WIDTH,640)
cap.set(cv2.CAP_PROP_FRAME_HEIGHT,340)

_, start_frame = cap.read()
start_frame = imutils.resize(start_frame,width=500)
start_frame = cv2.cvtColor(start_frame, cv2.COLOR_BGR2GRAY)
start_frame = cv2.GaussianBlur(start_frame, (21, 21),0)

alarm = False
alarm_mode = False
alarm_counter = False

def beep_alarm():
   global alarm
   for _ in range(6):
       if not alarm_mode():
           break
           print("ALARM UNRECOGNIZED FACES")
           winsound.Beep(2500,3500)
           alarm = False

while True:
   _, frame = cap.read()
   frame = imutils.resize(frame, width=500)

   if alarm_mode:
       #frame_bw = cv2.cvtColor(ave_image, cv2.COLOR_BGR2RGB)
       frame_bw = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
       #frame_bw = cv2.GaussianBlur(frame_bw(5,5) ,0)
       frame_bw = cv2.GaussianBlur(frame_bw,(5,5),cv2.BORDER_DEFAULT)

       difference = cv2.absdiff(frame_bw,start_frame)
       #threshold = cv2.threshold(difference, 25, 255, cv2.THRESHBINARY)[1]
       threshold = cv2.threshold(difference, 25, 255, cv2.THRESH_BINARY_INV)[1]
       start_frame = frame_bw
       #print(threshold)

       if threshold.sum() > 300:
           alarm_mode += 1
       else:
           if alarm_counter > 0:
               alarm_counter -= 1
       cv2.imshow("cam",threshold)
   else:
       cv2.imshow("cam", frame)

   if alarm_counter > 20:
       if not alarm:
           alarm=True
           threading.Thread(target=beep_alarm).start()

   key_pressed = cv2.waitKey(30)
   if key_pressed == ord("t"):
       alarm_mode = not alarm_mode
       alarm_counter = 0

   if key_pressed == ord("q"):
       alarm_mode = False
       break

cap.release()
cv2.destroyAllWindows()









